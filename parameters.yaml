AWSTemplateFormatVersion: 2010-09-09

Description: RDS stack

# parameters and constraints
Parameters:
  DBClass:
    Type: String
    Description: RDS Instance Class
    # allowed values parameter
    AllowedValues: 
      - db.t2.micro
      - db.t2.small
    ConstraintDescription: 'DBClass parameter can only have these values: db.t2.micro, db.t2.small'
    Default: db.t2.micro
  MasterUserName:
    Type: String
    Description: Master Username for the Database Instance
    MaxLength: 10
    Default: dbadmin
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: MasterUsername must begin with a letter and it cannot exceed 10 characters
    NoEcho: true
  MasterUserPassword:
    Type: String
    Description: Master User Passowrd for the Database Instance
    MinLength: 8
    NoEcho: true
  MultiAZ:
    Type: String
    Description: Enable Multi-AZ feature on the DB Instance 
    AllowedValues:
      - true
      - false
    ConstraintDescription: MultiAZ parameter should be either true or false
    Default: false
  AllocatedStorage:
    Type: Number
    Description: Database Storage Size in GB
    MinValue: 8
    MaxValue: 20
    # custom error message for number type constraint
    ConstraintDescription: AllocatedStorage parameter value should be between 8 and 20 GBs.
    # default value for parameter
    Default: 8
  SecurityGroupPorts:
    Type: List<Number>
    Description: 'Port number as a list <web-server-port>, <database-port>'
    Default: '80, 3306'
  # aws specific parameter types
  DBSubnets:
    Type: List<AWS::EC2::Subnet::Id>
    Description: 'Db subnet ids as a list: <subnet1>, <subnet2>, ...'
  # vpc id for security group resources
  VPCId:
    Type: AWS::EC2::VPC::Id
    Description: A valid VPC id in your AWS Account

Resources:
  Bastion:
    Type: AWS::EC2::Instance
    Properties: 
      ImageId: ami-09e2d756e7d78558d
      InstanceType: t2.micro
      # select the first subnet from the DbSubnets parameter
      SubnetId: !Select [ 0, !Ref DBSubnets ]
      Tags: 
        - 
          Key: Name
          # substitutes string variables in runtime - '<StackName>-Bastion'
          Value: !Sub '${AWS::StackName}-Bastion'
  WebServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VPCId
      GroupDescription: 'Web Server instances security group'
      SecurityGroupIngress:
        - 
          CidrIp: 0.0.0.0/0
          # sec group ref for web is the first index on the list
          FromPort:
            Fn::Select: [ 0, !Ref SecurityGroupPorts ]
          ToPort: !Select  [ 0, !Ref SecurityGroupPorts ]
          IpProtocol: tcp
  # db security group
  DbSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VPCId
      GroupDescription: 'Database instances security group'
      SecurityGroupIngress:
        - 
          CidrIp: 0.0.0.0/0
          # sec group ref for db is the second index on the list
          FromPort: !Select [ 1, !Ref SecurityGroupPorts ]
          ToPort: !Select [ 1, !Ref SecurityGroupPorts ]
          IpProtocol: tcp
  # db subnet group - resource in which rds instances can be launched into
  DbSubnetGroup:
    Type: 'AWS::RDS::DBSubnetGroup'
    Properties:
      DBSubnetGroupDescription: Subnets to launch db instances into
      SubnetIds: !Ref DBSubnets
        # references the index value in the DBSubnets string list
        # - !Select [ 0, !Ref DBSubnets ]
        # - !Select [ 1, !Ref DBSubnets ]
        # - !Select [ 2, !Ref DBSubnets ]
  # rds instance
  DatabaseInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceClass: !Ref DBClass
      Engine: mariadb
      MultiAZ: !Ref MultiAZ
      PubliclyAccessible: true
      AllocatedStorage: !Ref AllocatedStorage
      MasterUsername: !Ref MasterUserName
      MasterUserPassword: !Ref MasterUserPassword
      DBSubnetGroupName: !Ref DbSubnetGroup
      VPCSecurityGroups: 
        - !Ref DbSecurityGroup
      